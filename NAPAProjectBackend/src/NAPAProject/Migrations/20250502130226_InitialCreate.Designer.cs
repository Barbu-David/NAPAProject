// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NAPAProject.Data;

#nullable disable

namespace NAPAProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250502130226_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("NAPAProject.Models.Country", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Visited")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("NAPAProject.Models.Port", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.HasIndex("CountryName");

                    b.ToTable("Ports");
                });

            modelBuilder.Entity("NAPAProject.Models.Ship", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("NAPAProject.Models.Voyage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArrivalPort")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeparturePort")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArrivalPort");

                    b.HasIndex("DeparturePort");

                    b.ToTable("Voyages");
                });

            modelBuilder.Entity("NAPAProject.Models.Port", b =>
                {
                    b.HasOne("NAPAProject.Models.Country", "CountryPort")
                        .WithMany()
                        .HasForeignKey("CountryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryPort");
                });

            modelBuilder.Entity("NAPAProject.Models.Voyage", b =>
                {
                    b.HasOne("NAPAProject.Models.Port", "Arrival")
                        .WithMany()
                        .HasForeignKey("ArrivalPort")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NAPAProject.Models.Port", "Departure")
                        .WithMany()
                        .HasForeignKey("DeparturePort")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Arrival");

                    b.Navigation("Departure");
                });
#pragma warning restore 612, 618
        }
    }
}
